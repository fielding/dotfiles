# use # to comment

:: default : yabai -m config active_window_border_color 0xff6f5bab
:: switcher @ : yabai -m config active_window_border_color 0xfffc8617
:: swap @ : yabai -m config active_window_border_color 0xff7dfdee
:: tree @ : yabai -m config active_window_border_color 0xfffc3052
:: layout @ : yabai -m config active_window_border_color 0xfffdec5a


# streamline window/pane movement keybinds for vim splits and windows
ctrl - h -> : if [[ "$(yabai -m query --windows --window)" != *"VIM"* ]]; then yabai -m window --focus west; fi
ctrl - j -> : if [[ "$(yabai -m query --windows --window)" != *"VIM"* ]]; then yabai -m window --focus south; fi
ctrl - k -> : if [[ "$(yabai -m query --windows --window)" != *"VIM"* ]]; then yabai -m window --focus north; fi
ctrl - l -> : if [[ "$(yabai -m query --windows --window)" != *"VIM"* ]]; then yabai -m window --focus east; fi

# not sure if the following is implemented in yabai
#ctrl - 0x2A -> : if [[ "$(yabai -m query --windows --window)" != *"VIM"* ]]; then yabai -m window --focus prev; fi

# switching modes
default                        < ctrl - f      ; switcher
switcher, swap, layout, tree   < ctrl - f      ; default
switcher, swap, layout, tree   < escape        ; default


# switcher mode

## switch modes
switcher < a ; swap
switcher < s ; layout
switcher < t ; tree

## launch iterm
switcher < return : ~/bin/iterm-create-window; skhd -k 'escape'

## move window to desktop and follow
switcher < cmd + shift - 1 : yabai -m window --space  1; yabai -m space --focus 1
switcher < cmd + shift - 2 : yabai -m window --space  2; yabai -m space --focus 2
switcher < cmd + shift - 3 : yabai -m window --space  3; yabai -m space --focus 3
switcher < cmd + shift - 4 : yabai -m window --space  4; yabai -m space --focus 4
switcher < cmd + shift - 5 : yabai -m window --space  5; yabai -m space --focus 5
switcher < cmd + shift - 6 : yabai -m window --space  6; yabai -m space --focus 6


## move window to desktop
switcher < shift - 1 : yabai -m window --space  1
switcher < shift - 2 : yabai -m window --space  2 
switcher < shift - 3 : yabai -m window --space  3 
switcher < shift - 4 : yabai -m window --space  4
switcher < shift - 5 : yabai -m window --space  5  
switcher < shift - 6 : yabai -m window --space  6

## focus monitor
switcher < x : yabai -m display --focus last
switcher < z : yabai -m display --focus prev 
switcher < c : yabai -m display --focus next
switcher < 1 : yabai -m display --focus 1
switcher < 2 : yabai -m display --focus 2

## send to monitor and follow focus
switcher < cmd - x : yabai -m window --display last; yabai -m display --focus last
switcher < cmd - z : yabai -m window --display prev; yabai -m display --focus prev
switcher < cmd - c : yabai -m window --display next; yabai -m display --focus next
switcher < cmd - 1 : yabai -m window --display 1; yabai -m display --focus 1
switcher < cmd - 2 : yabai -m window --display 2; yabai -m display --focus 2

# swap mode
## swap window positions
swap < h : yabai -m window --swap west
swap < j : yabai -m window --swap south
swap < k : yabai -m window --swap north
swap < l : yabai -m window --swap east

## move window
swap < shift - h : yabai -m window --warp west
swap < shift - j : yabai -m window --warp south
swap < shift - k : yabai -m window --warp north
swap < shift - l : yabai -m window --warp east

## mirror tree y-axis
swap < y : yabai -m space --mirror y-axis

## mirror tree x-axis
swap < x : yabai -m space --mirror x-axis

# layout mode
## change desktop layout
layout < a : yabai -m space --layout bsp
layout < s : yabai -m space --layout monocle # not implemented yet?
layout < d : yabai -m space --layout float

## toggle desktop offset
layout < o : yabai -m space --toggle padding; yabai -m space --toggle ga

# tree mode
tree < f                :   yabai -m window --toggle zoom-fullscreen
tree < shift - f        :   yabai -m window --toggle native-fullscreen
tree < d                :   yabai -m window --toggle zoom-parent
tree < w                :   yabai -m window --toggle float;\
                            yabai -m window --grid 4:4:1:1:2:2
tree < r                :   yabai -m space --rotate 90
tree < s                :   yabai -m window --toggle split

## adjust window size
tree < h                :   yabai -m window --resize left:-20:0
tree < j                :   yabai -m window --resize bottom:0:20
tree < k                :   yabai -m window --resize top:0:-20
tree < l                :   yabai -m window --resize right:20:0

tree < shift - h        :   yabai -m window --resize left:20:0
tree < shift - j        :   yabai -m window --resize bottom:0:-20
tree < shift - k        :   yabai -m window --resize top:0:20
tree < shift - l        :   yabai -m window --resize right:-20:0

## balance size of windows
tree < e                :   yabai -m space --balance


### Not sure of the yabai version of these
## adjust desktop padding
#layout < p         : chunkc tiling::desktop --padding inc
#layout < shift - p : chunkc tiling::desktop --padding dec

## adjust window gap
#layout < g         : chunkc tiling::desktop --gap inc
#layout < shift - g : chunkc tiling::desktop --gap dec


### Review and possibly implement
# make floating window fill screen
shift + alt - up     : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1

# make floating window fill right-half of screen
shift + alt - right  : yabai -m window --grid 1:2:1:0:1:1

# create desktop, move window and follow focus
#shift + cmd - n : yabai -m space --create;\
#                  id=$(yabai -m query --displays --display | grep "spaces");\
#                  yabai -m window --space $(echo ${id:10:${#id}-10});\
#                  yabai -m space --focus $(echo ${id:10:${#id}-10})

# create desktop and follow focus
#cmd + alt - n : yabai -m space --create;\
#                id=$(yabai -m query --displays --display | grep "spaces");\
#                yabai -m space --focus $(echo ${id:10:${#id}-10})

# destroy desktop
#cmd + alt - w : yabai -m space --destroy